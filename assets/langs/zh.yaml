# SPDX-FileCopyrightText: 2019-2021 Vishesh Handa <me@vhanda.in>
#
# SPDX-License-Identifier: CC-BY-4.0

settings:
  list:
    userInterface:
      title: 用户界面
      subtitle: 主题，语言，主页，底栏，渲染
    git:
      title: Git
      subtitle: Git Author，远程库，同步频率
    editor:
      title: 编辑器
      subtitle: 默认编辑器，默认视图
    storage:
      title: 存储和文件格式
      subtitle: 存储，序列化，元数据，文件格式
    analytics:
      title: 数据共享
      subtitle: 在征得你同意的情况下收集有限的统计数据
    debug:
      title: 调试
      subtitle: 查看 GitJournal 运行情况
    experiments:
      title: 实验功能
      subtitle: 体验尚在测试中的功能
  project:
    header: 项目
    docs: 文档与帮助
    contribute: 贡献
    about: 关于

  ok: 好的
  cancel: 取消
  title: 设置
  author:
    label: Author
    validator: 请输入一个名称
  email:
    label: 邮箱地址
    validator:
      empty: 请输入邮箱
      invalid: 请确认邮箱地址符合规范
  display:
    title: 显示设置
    homeScreen: 主页
    theme: 主题
    lang: 语言
    images:
      title: 图片设置
      subtitle: 配置图片显示效果
      imageTextType:
        alt: Alt Text
        altAndTooltip: Alt Text and Tooltip
        tooltip: Tooltip
        none: None
      captions:
        title: 图片说明
        subtitle: 配置图片说明
        useAsCaption: 图片说明显示方式
        overlayCaption: 在足够大的图片上方显示说明
        transparentCaption: 图片说明使用半透明背景
        blurBehindCaption: 使说明后的图片模糊
        tooltipFirst:
          title: 在 tooltip 前显示 alt text
          tooltip: 目前的顺序：「<tooltip> - <altText>」
          altText: 目前的顺序：「<altText> - <tooltip>」
        captionOverrides: Caption Overrides
        tagDescription: Put these tags in “![altText](... "tooltip")” to override the behavior for it.
        doNotCaptionTags:
          hint: DoNotCaption-Tags
          label: Never use as caption with tags
          validator:
            empty: Tags cannot be empty.
            same: Tag cannot be identical to a “DoCaption-Tag”.
        doCaptionTags:
          hint: DoCaption-Tags
          label: Always use as caption with tags
          validator:
            empty: Tags cannot be empty.
            same: Tag cannot be identical to a “DoNotCaption-Tag”.
      detailsView:
        header: 详细视图
        maxZoom: 最大缩放级别
        rotateGestures:
          title: 使用手势旋转图片
          subtitle: 用两根手指旋转以旋转图片
      theming:
        title: Image Theming
        subtitle: Configure how images are themed
        adjustColors:
          all: All
          blackAndWhite: Only black and white
          grays: Only grays
        doNotThemeTags:
          hint: DoNotTheme-Tags
          label: Never theme images with tags
          validator:
            empty: Tags cannot be empty.
            same: Tag cannot be identical to a “DoTheme-Tag”.
        doThemeTags:
          hint: DoTheme-Tag
          label: Always theme images with tags
          validator:
            empty: Tags cannot be empty.
            same: Tag cannot be identical to a “DoNotTheme-Tag”.
        matchCanvasColor:
          title: Match Background Color
          subtitle: Replaces white/black parts of vector graphics with the canvas color
        tagDescription: Put these tags in “![altText](... "tooltip")” to override the behavior for the image.
        themeOverrides: Theme Overrides
        themeOverrideTagLocation: Theme Override Tag Location
        themeRasterGraphics: Theme Raster Graphics (.png/.jpg)
        themeSvgWithBackground: Theme SVGs With Background
        themeVectorGraphics:
          title: Theme Vector Graphics
          filter: Using Color Filter
          off: No
          on: Yes
        vectorGraphics: 矢量图 (.svg)
        vectorGraphicsAdjustColors: Colors to Adjust
  theme:
    light: 浅色模式
    dark: 深色模式
    default: 跟随系统
  gitAuthor: Git Author 设置
  versionInfo: GitJournal 版本
  versionCopied: 已复制版本信息到剪贴板
  analytics: 数据共享
  crashReports: 收集匿名崩溃信息
  usageStats: 收集匿名使用信息
  debug:
    title: 调试应用
    subtitle: 查看应用运行详细信息
    levels:
      title: 选择等级
      error: Error
      warning: warning
      info: Info
      debug: Debug
      verbose: Verbose
    copy: 调试日志已复制
  images:
    title: 图片设置
    subtitle: 配置图片的存储位置
    imageLocation: 图片位置
    currentFolder: 和笔记相同
    customFolder: 自定义目录
  gitRemote:
    changeHost:
      title: 重新配置 Git Host
      subtitle: 未同步的笔记将会丢失
      ok: 好的
      cancel: 取消
    title: Git 远程设置
    subtitle: 配置如何同步你的笔记
    host: Git Host
    branch: 分支
    resetHard:
      title: 重设 Git Host
      subtitle: 这将会强制将现有分支同其远程版本同步

  fileTypes:
    title: 笔记文件类型
    subtitle: 配置什么类型的文件被当作笔记
    numFiles:
      zero: ""
      one: "{} 文件"
      many: "{} 文件"
      two: "{} 文件"
      few: "{} 文件"
      other: "{} 文件"
    noExt: 无后缀
  noteMetaData:
    title: 笔记元数据设置
    subtitle: 配置笔记元数据呈现方式
    text: 每一条笔记都有元数据，元数据以下面 YAML 头的格式存储 -
    enableHeader: 启用 YAML 头
    modified: 修改时间栏
    created: 创建时间栏
    tags: 标签栏
    example:
      title: 示例标题
    titleMetaData:
      title: 标题
      fromH1: 标题 1
      fromYaml: 从 YAML 的 'title' 获取
      filename: 文件名
    exampleTitle: Pigeons
    exampleBody: I think they might be evil. Even more evil than penguins.
    exampleTag1: Birds
    exampleTag2: Evil
    customMetaData:
      title: 自定义元数据
      invalid: YAML 不正确
    output: 输出
    input: 输出
  privacy: 隐私政策
  terms: 使用条款
  license:
    title: 许可证
    subtitle: GitJournal 使用了其他优秀的软件
  experimental:
    title: 实验功能
    subtitle: 尝试正在开发的功能
    markdownToolbar: 在编辑器中显示 Markdown 工具栏
    graphView: 图谱视图
    accounts: 平台独立的帐号
    includeSubfolders: 包括子目录
    experimentalGitOps: Dart-only Git
    merge: Dart-only merge
    autoCompleteTags: 自动补全标签
    history: 历史视图
  editors:
    title: 编辑器设置
    subtitle: 配置不同的编辑器
    defaultEditor: 默认编辑器
    defaultNoteFormat: 默认笔记格式
    defaultState: 默认视图
    markdownEditor: Markdown 编辑器
    journalEditor: 日志编辑器
    defaultFolder: 默认目录
    journalDefaultFolderSelect: 在 '{}' 新建笔记
    checklistEditor: 清单编辑器
    orgEditor: Org 编辑器
    rawEditor: Raw 编辑器
    choose: 选择编辑器
  sortingField:
    modified: 编辑时间
    created: 创建时间
    filename: 文件名
    title: 标题
  sortingOrder:
    asc: 升序
    desc: 降序
  sortingMode:
    field: 规则
    order: 排序
  remoteSync:
    auto: 自动
    manual: 手动
  tags:
    title: 标签设置
    subtitle: 配置标签解析方式
    enable: 解析行内标签
    prefixes: 行内标签前缀
  misc:
    title: 其他设置
    swipe: 滑动以删除笔记
    listView: 列表视图
    confirmDelete: 删除笔记前确认
    hardWrap: 启用 hardWrap
    emoji: Emojify Text
  fileFormat:
    markdown: Markdown
    txt: Txt
    orgMode: Org Mode
  NoteFileNameFormat:
    iso8601WithTimeZone: ISO8601 With TimeZone
    iso8601: ISO8601
    iso8601WithoutColon: ISO8601 without Colons
    title: Title
    uuid: Uuid V4
    simple: yyyy-mm-dd-hh-mm-ss
    zettelkasten: yyyymmddhhmmss
    dateOnly: yyyy-mm-dd
  HomeScreen:
    allNotes: 全部笔记
    allFolders: 所有目录
  EditorDefaultView:
    edit: 编辑
    view: 预览
    lastUsed: 上一次使用
  ssh:
    syncFreq: 同步频率
  note:
    title: 笔记设置
    defaultFolder: 新笔记存储位置
    newNoteFileName: 新笔记的文件名
  storage:
    title: 存储
    fileName: 文件名
    external: 在外部存储笔记库
    icloud: 在 iCloud 中存储笔记库
    repoLocation: 笔记库位置
    notWritable: "{} 不可写"
    failedExternal: 无法获取外部存储与目录信息
  drawer:
    title: 侧边栏设置
  bottomMenuBar:
    title: 底栏设置
    subtitle: 配置底栏
    enable: 显示底栏
  deleteRepo: 删除库

editors:
  checklist:
    add: 添加项目
  common:
    defaultBodyHint: 在此处键入
    defaultTitleHint: 标题
    defaultFileNameHint: 文件名
    discard: 放弃更改
    share: 分享笔记
    takePhoto: 拍照
    addImage: 相册
    editFileName: 编辑文件名
    tags: 编辑标签
    find: 在笔记内查找
    zen:
      enable: 进入禅模式
      disable: 退出禅模式
    saveNoteFailed:
      title: 保存笔记失败
      message: 抱歉，在保存笔记时出现了一些问题。为了防止数据丢失，笔记内容已复制到剪贴板。
pro: Pro
beta: BETA
none: None
actions:
  newNote: 新笔记
  newJournal: 新日志
  newChecklist: 新清单
screens:
  home:
    allNotes: 全部笔记
  folders:
    title: 目录
    selected: 选中目录
    dialog:
      title: 新建目录
      create: 新建
      discard: 取消
    errorDialog:
      title: 错误
      deleteContent: 目录中含有笔记，无法删除
      renameContent: 无法重命名根目录
      ok: 好的
    actions:
      rename: 重命名目录
      subFolder: 新建子目录
      delete: 删除目录
      decoration: 目录名
      empty: 请输入目录名
  tags:
    title: 标签
    empty: 未找到标签
  filesystem:
    ignoredFile:
      title: 已忽略的文件
      ok: 好的
      rename: 重命名
    rename:
      decoration: 文件名称
      title: 重命名
  folder_view:
    empty: 创建一些笔记吧！

OnBoarding:
  Skip: 跳过
  Next: 下一步
  getStarted: 开始
  subtitle: '支持 Git 同步的开源笔记应用'
  page2: '你的笔记以标准的 Markdown 加 YAML 头的格式存储'
  page3: '同任何 Git 托管服务商同步你的笔记'

widgets:
  rename:
    yes: 重命名
    no: 取消
    validator:
      empty: 请输入名称
      exists: 已存在同名笔记
      contains: 名称不可包含 /
    noExt: "警告：无后缀。将会当作文本处理"
    changeExt: "警告：修改文件类型，从 '{}' 改为 '{}'"
  backlinks:
    title:
      zero: ""
      one: " {} 个笔记同此笔记链接"
      many: "{} 个笔记同此笔记链接"
      two: "{} 个同此笔记链接"
      few: "{} 个同此笔记链接"
      other: "{} 个同此笔记链接"
  imageRenderer:
    caption: "{first} - {second}"
    httpError: "Code: {status} for {url}"
  SortingOrderSelector:
    title: 排序
  PurchaseButton:
    text: 以 {price} 购买
    fail: 加载失败
    failSend: 发送购买请求失败
    failPurchase: 购买失败 - {}
  FolderView:
    noteDeleted: 已删除的笔记
    undo: 撤销
    syncError: 同步错误 {}
    headerOptions:
      heading: 标题选项
      auto: 自动生成的标题
      titleFileName: 标题或者文件名
      fileName: 文件名
      summary: 展示笔记概览
      customize: 自定义视图
    views:
      standard: 标准视图
      journal: 日志视图
      grid: 网格视图
      card: 卡片视图
      calendar: 日历视图
      select: 选择视图
    sortingOptions: 排序选项
    viewOptions: 视图设置
    searchFailed: 没有找到结果
    pinned: 固定
    others: 其他
    actions:
      moveToFolder: 移动到
  NoteDeleteDialog:
    title:
      one: 是否删除该笔记？
      two: 是否删除 {} 条笔记 ？
      few: 是否删除 {} 条笔记 ？
      many: 是否删除 {} 条笔记 ？
      other: 是否删除 {} 条笔记 ？
    yes: 是
    no: 否
  NoteEditor:
    renameFile: 重命名
    fileName: 文件名
    addType: 将 '{}' 添加进受支持的文件类型
  SyncButton:
    error: 同步错误 {}
  PurchaseWidget:
    failed: 购买失败
  NoteViewer:
    linkNotFound: 链接 '{}' 未找到
    linkInvalid: 链接 '{}' 不存在
  FolderSelectionDialog:
    title: 选择一个目录

rootFolder: 根目录
ignoredFiles:
  dot: 以 . 开始
  ext: 不以以下字符结束 -
drawer:
  setup: 设置 Git Host
  pro: 解锁 Pro 版
  all: 全部笔记
  folders: 目录
  fs: 文件系统
  graph: 图谱
  history: 历史
  tags: 标签
  share: 分享应用
  rate: 评分
  feedback: 反馈
  bug: 报告 Bug
  remote: 无 Git Host
  addRepo: 新建库
  login: 登录
setup:
  autoconfigure:
    title: 为了执行下列步骤，我们需要你的授权
    step1: 1. 列出已存在的库与新建库
    step2: 2. 在此设置生成 SSH 密钥
    step3: 3. 部署密钥，以获取库的读写权限
    warning: 这将会授予 GitJournal 所有私有及公有库的访问权限。如果你不放心，请返回，并选择「手动配置」选项。
    authorize: 授权 GitJournal
    waitPerm: 等待授权 ……
    readUser: 读取用户信息
  repoSelector:
    title: 选择或者新建一个库
    hint: 键入以搜索，或者新建库
    create: 新建私有库 {}
    loading: 加载中
  cloneUrl:
    enter: 输入 Git Clone URL
    validator:
      empty: 请输入链接
      invalid: 链接输入不正确
      onlySsh: 目前仅接受 SSH 链接
    manual:
      title: 请新建一个 Git 库：
      step1: 1. 打开网页，新建库，然后复制库的 Clone URL。
      step2: 2. 输入 Git clone URL
      button: 打开网页以新建库
  next: 下一步
  fail: 失败
  keyEditors:
    public: 不正确的 Public Key：不以 ssh-rsa 或 ssh-ed25519 开头
    private: 不正确的 Private Key
    load: 从文件加载
  sshKey:
    generate: 生成 SSH Key
    title: 为了访问库，必须复制 public key，用于库的 deploy key
    step1: 1. 复制 Key
    step2a: 2. 打开网页，将 public key 复制进 deploy key。确认给予其 Write 权限.
    step2b: 2. 给予此 SSH Key 访问 git 库的权限。 (你必须自己搞定)
    step3: 3. 正在尝试 Clone ……
    copy: 复制 Key
    copied: 已将 Public Key 复制进剪贴板
    regenerate: 重新生成 Key
    openDeploy: 打开 Deploy Key 网页
    clone: Clone 库
    addDeploy: 以 Deploy Key 添加
    save: 保存
  sshKeyChoice:
    title: 授权需要 SSH
    generate: 生成新的 Key
    custom: 使用自己的 SSH Keys
  sshKeyUserProvided:
    public: Public Key -
    private: Private Key -
    password: Private Key 密码
  cloning: 正在尝试 Clone ……
  host:
    title: 选择一个 Git 托管服务商：
    custom: 自定义
  autoConfigure:
    title: 你希望以什么方式配置？
    automatic: 自动配置
    manual: 手动配置

feature:
  darkMode: 深色模式
  rawEditor: Raw 编辑器
  folderSupport: 支持目录
  fileNameCustomize: 自定义文件名
  noteMetaDataCustomize:
    title: 自定义笔记元数据
    subtitle: 使 GitJournal 能够于静态网页生成工具一同使用
  autoMergeConflicts: 自动解决 Merge 冲突
  noteSorting: 自定义笔记排序
  gitPushFreq: 自定义笔记同步频率
  checklistEditor: 清单编辑器
  journalEditor: 日志编辑器
  diffViews: 不同的视图 - 日志，网格，标准
  imageSupport: 支持图片
  tags: 笔记标签
  appShortcuts: App Shortcuts
  createRepo: 应用内新建库
  backlinks: 笔记支持反链
  txtFiles: 支持文本文件
  wikiLinks: 支持 Wiki 链接
  metaDataTitle: 自定义标题元数据
  journalEditorDefaultFolder: 自定义日志编辑器的默认文件夹
  yamlModifiedKey: 自定义 YAML modified 栏
  yamlCreatedKey: 自定义 YAML created 栏
  yamlTagsKey: 自定义 YAML tags 栏
  disableYamlHeader: 禁用 YAML 元数据头
  customizeHomeScreen: 自定义主屏
  zenMode: 禅模式
  emojiSupport:
    title: 支持 Emoji
    subtitle: "将 :heart: 转化为 ❤️"
  allNotesView: 新增 "全部笔记" 界面
  basicSearch: 基本搜索
  customSSHKeys: 支持提供自己的 SSH Keys
  customMetaData: 添加自定义元数据到新笔记中
  graphVisualization: 可视化图谱
  mutliRepos: 多 Git 库
  customThemes: 自定义主题
  gitLog: 查看和检索 Git 历史
  latex: Latex 支持
  mermaid: 支持 Mermaid 图表
  encryptedHosting: Git Hosting 加密
  desktop: 桌面应用
  markdownToolbar: Markdown 工具栏
  localization:
    title: 本地化
    subtitle: 让 GitJournal 能够被翻译
  inlineTags: 行内标签
  singleJournalEntry: 每天仅允许创建一篇日志
  configureBottomMenuBar: 配置底栏
  customFileNamePerEditor: 自定义每个编辑器的文件名
  branchSelection: Git 分支选择

feature_timeline:
  title: 功能时间轴
  progress: 开发中
  plan: 计划内
  issues: GitJournal 的开发进度可在 GitHub 中跟进，请为你觉得重要的 issues 投票。

purchase_screen:
  title: Pro 版本
  desc: 'GitJournal 完全开源，是大量的开发工作的成果。它没有来自风险投资亦或企业的支持，也永远不会有。你的支持直接维系着开发工作。


GitJournal 采用「随你付，随心付（有最小额）」的收费方式'
  restore: 恢复购买
  oneTime:
    title: 一次性付费
    desc: 永远解锁现版本所有 Pro 功能，获得接下来 12 个月的新增功能。
  monthly:
    title: 按月付费
    desc: 解锁所有的 Pro 功能。在 12 个月或者支付 {minYearlyPurchase} 后，你将获得所有 「一次性付费」的权益。
  thanks:
    title: 感谢
    subtitle: 谢谢你对 GitJournal 的支持